tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(entropy = entropy(qtd),
qtd = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
levels(ts_atracacoes$data)
x <- melt(ts_atracacoes, id.vars=c("data", "porto"))
melt?
x
?melt
head(melt(tips))
head(tips)
x <- melt(ts_atracacoes, id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,1:3], id.vars=c("data", "porto"))
View(x)
x <- melt(ts_atracacoes[,1:4], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,4)], id.vars=c("data", "porto"))
View(x)
x <- melt(ts_atracacoes[,c(1:2,5)], id.vars=c("data", "porto"))
View(x)
x <- melt(ts_atracacoes[,c(1:2,3,5)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,4,5)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,5,6)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,6)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,7)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,8)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,9)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,10)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,11)], id.vars=c("data", "porto"))
x <- melt(ts_atracacoes[,c(1:2,10)], id.vars=c("data", "porto"))
View(ts_atracacoes)
sapply(ts_atracacoes, class)
x <- melt(ts_atracacoes, id.vars=c("data", "porto"))
View(ts_atracacoes)
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(ent = entropy(qtd),
n = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
x <- select(ts_atracacoes, porto, data, ent, n, espera_atracacao)
y <- melt(x, id.vars=c("data", "porto"))
View(x)
y <- melt(x, id.vars=c("data"))
x <- select(ts_atracacoes, data, ent, n, espera_atracacao)
x <- ts_atracacoes %>% select(data, ent, n, espera_atracacao)
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(ent = entropy(qtd),
n = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
x <- ts_atracacoes %>% select(data, ent, n, espera_atracacao)
library(dplyr)
library(reshape)
atracacoes <- readRDS("C:/Users/eduar/OneDrive/Git/datasets/navigations/atracacoes.rds")
entropy <- function(x) {
x <- x[x > 0]
if (length(x) <= 1)
return(0)
n <- sum(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(ent = entropy(qtd),
n = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
x <- as.data.frame(ts_atracacoes)
y <- melt(x, id.vars=c("data"))
y <- melt(x, id.vars=c("data", "porto"))
View(y)
z <- cast(y %>% filter(variable == "espera_atracacao"), data ~ value)
?cast
y <- x %>% select(data, porto, espera_atracacao)
z <- cast(y, data ~ porto, mean)
View(z)
z <- cast(y, data ~ porto, sum)
View(z)
y <- melt(ts_atracacoes %>% select(data, ent, n, espera_atracacao), id.vars=c("data", "porto"))
ts_atracacoes <- as.data.frame(ts_atracacoes)
y <- melt(ts_atracacoes %>% select(data, ent, n, espera_atracacao), id.vars=c("data", "porto"))
y <- melt(ts_atracacoes %>% select(data, porto, espera_atracacao), id.vars=c("data", "porto"))
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(ent = entropy(qtd),
n = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
y <- melt(ts_atracacoes %>% select(data, porto, espera_atracacao), id.vars=c("data", "porto"))
y <- x %>% select(data, porto, espera_atracacao)
y <- melt(ts_atracacoes %>% select(data, porto, espera_atracacao), id.vars=c("data", "porto"))
z <- cast(y, data ~ porto, sum)
z <- cast(select(data, porto, espera_atracacao), data ~ porto, sum)
z <- cast(ts_atracacoes %>% select(data, porto, espera_atracacao), data ~ porto, sum)
View(z)
plot(z$data, z$AIVEL)
line(z$AIVEL)
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(ent = entropy(qtd),
n = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
espera_atracacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_atracacao), data ~ porto, sum)
View(espera_atracacao_mes)
saveRDS(espera_atracacao_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/espera_atracacao_mes.rds")
espera_inicio_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_atracacao), data ~ porto, sum)
saveRDS(espera_inicio_operacao, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/espera_inicio_operacao_mes.rds")
espera_desatracacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_desatracacao), data ~ porto, sum)
saveRDS(espera_desatracacao_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/espera_desatracacao_mes.rds")
tempo_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, tempo_operacao), data ~ porto, sum)
saveRDS(espera_desatracacao_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/tempo_operacao_mes.rds")
tempo_atracado_mes <- cast(ts_atracacoes %>% select(data, porto, tempo_atracado), data ~ porto, sum)
saveRDS(tempo_atracado_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/tempo_atracado_mes.rds")
tempo_estadia_mes <- cast(ts_atracacoes %>% select(data, porto, tempo_estadia), data ~ porto, sum)
saveRDS(tempo_estadia_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/tempo_estadia_mes.rds")
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(atracacoes = sum(qtd),
ent = entropy(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(atracacoes = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia),
entropia = entropy(qtd)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
atracacoes_mes <- cast(ts_atracacoes %>% select(data, porto, atracacoes), data ~ porto, sum)
saveRDS(atracacoes_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/atracacoes_mes.rds")
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
library(dplyr)
library(reshape)
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
atracacoes <- readRDS("atracacoes.rds")
entropy <- function(x) {
x <- x[x > 0]
if (length(x) <= 1)
return(0)
n <- sum(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
library(dplyr)
library(reshape)
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
atracacoes <- readRDS("atracacoes.rds")
entropy <- function(x) {
x <- x[x > 0]
if (length(x) <= 1)
return(0)
n <- sum(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
library(dplyr)
library(reshape)
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
atracacoes <- readRDS("atracacoes.rds")
entropy <- function(x) {
x <- x[x > 0]
if (length(x) <= 1)
return(0)
n <- sum(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
library(dplyr)
library(reshape)
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
atracacoes <- readRDS("atracacoes.rds")
entropy <- function(x) {
x <- x[x > 0]
if (length(x) <= 1)
return(0)
n <- sum(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
ts_atracacoes <- atracacoes %>% filter(atr_data_atracacao >= "2010-01-01") %>%
group_by(porto=atr_porto_atracacao, data=format(atr_data_atracacao, "%Y-%m"), atr_tipo_operacao) %>%
summarize(qtd = n(),
espera_atracacao=sum(tmp_atr_tempo_espera_atracacao),
espera_inicio_operacao=sum(tmp_atr_tempo_espera_inicio_operacao),
espera_desatracacao=sum(tmp_atr_tempo_espera_desatracacao),
tempo_operacao=sum(tmp_atr_tempo_operacao),
tempo_atracado=sum(tmp_atr_tempo_atracado),
tempo_estadia=sum(tmp_atr_tempo_estadia)
)
ts_atracacoes <- ts_atracacoes %>%
group_by(porto, data) %>%
summarize(atracacoes = sum(qtd),
espera_atracacao=sum(espera_atracacao),
espera_inicio_operacao=sum(espera_inicio_operacao),
espera_desatracacao=sum(espera_desatracacao),
tempo_operacao=sum(tempo_operacao),
tempo_atracado=sum(tempo_atracado),
tempo_estadia=sum(tempo_estadia),
entropia = entropy(qtd)
)
ts_atracacoes$porto <- as.factor(ts_atracacoes$porto)
ts_atracacoes$data <- as.factor(ts_atracacoes$data)
atracacoes_mes <- cast(ts_atracacoes %>% select(data, porto, atracacoes), data ~ porto, sum)
saveRDS(atracacoes_mes, file="atracacoes_mes.rds")
espera_atracacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_atracacao), data ~ porto, sum)
saveRDS(espera_atracacao_mes, file="espera_atracacao_mes.rds")
espera_inicio_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_atracacao), data ~ porto, sum)
saveRDS(espera_inicio_operacao, file="espera_inicio_operacao_mes.rds")
espera_inicio_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_inicio_operacao), data ~ porto, sum)
saveRDS(espera_inicio_operacao, file="espera_inicio_operacao_mes.rds")
espera_inicio_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_inicio_operacao), data ~ porto, sum)
saveRDS(espera_inicio_operacao, file="espera_inicio_operacao_mes.rds")
espera_inicio_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_inicio_operacao), data ~ porto, sum)
saveRDS(espera_inicio_operacao, file="espera_inicio_operacao_mes.rds")
ts_atracacoes %>% select(data, porto, espera_inicio_operacao)
espera_inicio_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_inicio_operacao), data ~ porto, sum)
saveRDS(espera_inicio_operacao_mes, file="espera_inicio_operacao_mes.rds")
espera_desatracacao_mes <- cast(ts_atracacoes %>% select(data, porto, espera_desatracacao), data ~ porto, sum)
saveRDS(espera_desatracacao_mes, file="espera_desatracacao_mes.rds")
tempo_operacao_mes <- cast(ts_atracacoes %>% select(data, porto, tempo_operacao), data ~ porto, sum)
saveRDS(espera_desatracacao_mes, file="tempo_operacao_mes.rds")
tempo_atracado_mes <- cast(ts_atracacoes %>% select(data, porto, tempo_atracado), data ~ porto, sum)
saveRDS(tempo_atracado_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/tempo_atracado_mes.rds")
tempo_estadia_mes <- cast(ts_atracacoes %>% select(data, porto, tempo_estadia), data ~ porto, sum)
saveRDS(tempo_estadia_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/tempo_estadia_mes.rds")
entropia_mes <- cast(ts_atracacoes %>% select(data, porto, entropia), data ~ porto, sum)
saveRDS(entropia_mes, file="C:/Users/eduar/OneDrive/Git/datasets/navigations/entropia_mes.rds")
source('C:/Users/eduar/OneDrive/Git/datasets/navigations/gera-ts.R')
comp_word <- function(str) {
x <- strsplit(str, "^")
x <- x[[1]]
n <- length(x)
x <- table(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
comp_word("AA")
comp_word("AB")
comp_word("AZ")
comp_word <- function(str) {
x <- strsplit(str, "^")
x <- x[[1]]
n <- length(x)
x <- table(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
comp_word <- function(str) {
x <- strsplit(str, "^")
x <- x[[1]]
n <- length(x)
x <- table(x)
x <- x / n
y <- 0
for (i in 1:length(x)) {
y <- y - x[i]*log(x[i],2)
}
y <- y / (-log(1/n,2))
return(y)
}
comp_word("A")
comp_word("AA")
comp_word("AB")
comp_word("AZ")
source('C:/Users/eduar/OneDrive/Git/mylibrary/myGraphic-test.R')
example1 <- atracacoes_mes %>% select(x=data, `Angra dos Reis`)
head(example1)
example1 <- atracacoes_mes %>% select(data, `Angra dos Reis`)
head(example1)
colors <- brewer.pal(11, 'Spectral')
# setting the font size for all charts
font <- theme(text = element_text(size=16))
# This function is used only to set graphics size in this notebook. Ignore it for the moment.
plot.size(10, 5)
# example1: dataset to be plotted
example1 <- atracacoes_mes %>% select(data, `Angra dos Reis`)
head(example1)
# The function returns a preset graphic that can be enhanced.
grf <- plot.scatter(example1, label_x = "data", label_y  = "atracações", colors=colors[11])
# Increasing the font size of the graphics
grf <- grf + font
# Actual plot
plot(grf)
# The function returns a preset graphic that can be enhanced.
grf <- plot.series(example1, label_x = "data", label_y  = "atracações", colors=colors[11])
# Increasing the font size of the graphics
grf <- grf + theme(text = element_text(size=16))
grf <- grf + theme(axis.text.x = element_text(angle=90, hjust=1))
# Actual plot
plot(grf)
grf <- plot.series(example1, label_x = "data", label_y  = "atracações", colors=colors[11])
# Increasing the font size of the graphics
grf <- grf + theme(text = element_text(size=16))
grf <- grf + theme(axis.text.x = element_text(angle=90, hjust=1))
grf <- grf + scale_x_discrete(breaks = levels(example1$data)[c(T, rep(F, 5))])
# Actual plot
plot(grf)
source("https://raw.githubusercontent.com/eogasawara/mylibrary/master/myPackage.R")
loadlibrary("ggplot2")
loadlibrary("dplyr")
loadlibrary("reshape")
loadlibrary("RColorBrewer")
source("https://raw.githubusercontent.com/eogasawara/mylibrary/master/myGraphic.R")
#configure a pasta onde estão os dados
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
atracacoes <- readRDS("atracacoes_mes.rds")
colors <- brewer.pal(11, 'Spectral')
# setting the font size for all charts
# This function is used only to set graphics size in this notebook. Ignore it for the moment.
plot.size(10, 5)
# example1: dataset to be plotted
example1 <- atracacoes_mes %>% select(data, `Angra dos Reis`)
head(example1)
# The function returns a preset graphic that can be enhanced.
grf <- plot.series(example1, label_x = "data", label_y  = "atracações", colors=colors[11])
# Increasing the font size of the graphics
grf <- grf + theme(text = element_text(size=16))
grf <- grf + theme(axis.text.x = element_text(angle=90, hjust=1))
grf <- grf + scale_x_discrete(breaks = levels(example1$data)[c(T, rep(F, 5))])
# Actual plot
plot(grf)
source("https://raw.githubusercontent.com/eogasawara/mylibrary/master/myPackage.R")
loadlibrary("ggplot2")
loadlibrary("dplyr")
loadlibrary("reshape")
loadlibrary("RColorBrewer")
source("https://raw.githubusercontent.com/eogasawara/mylibrary/master/myGraphic.R")
#configure a pasta onde estão os dados
setwd("C:/Users/eduar/OneDrive/Git/datasets/navigations")
atracacoes_mes <- readRDS("atracacoes_mes.rds")
colors <- brewer.pal(11, 'Spectral')
# setting the font size for all charts
# This function is used only to set graphics size in this notebook. Ignore it for the moment.
plot.size(10, 5)
# example1: dataset to be plotted
example1 <- atracacoes_mes %>% select(data, `Angra dos Reis`)
head(example1)
# The function returns a preset graphic that can be enhanced.
grf <- plot.series(example1, label_x = "data", label_y  = "atracações", colors=colors[11])
# Increasing the font size of the graphics
grf <- grf + theme(text = element_text(size=16))
grf <- grf + theme(axis.text.x = element_text(angle=90, hjust=1))
grf <- grf + scale_x_discrete(breaks = levels(example1$data)[c(T, rep(F, 5))])
# Actual plot
plot(grf)
